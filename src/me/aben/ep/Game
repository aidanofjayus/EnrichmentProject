package me.aben.ep;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

import javax.swing.JPanel;

import me.aben.ep.states.StateManager;

public class Game extends JPanel implements Runnable, KeyListener {

	private static final long serialVersionUID = 1L;

	private Window window;
	private boolean running = false;
	private Thread thread;

	private BufferedImage image;
	private Graphics2D g;
	
	private StateManager stateManager;

	public Game() {
		super();
		start();
	}

	public void start() {
		if (thread == null) {
			thread = new Thread(this, "Display");
			addKeyListener(this);
			thread.start();
		}
		window = new Window("Thanks Frank");
		window.add(this);
		image = new BufferedImage(Window.WIDTH, Window.HEIGHT, BufferedImage.TYPE_INT_RGB);
		g = (Graphics2D) image.getGraphics();
		stateManager = new StateManager();
		running = true;
	}

	public void stop() {
		running = false;
		try {
			thread.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		long start, elapsed, wait;
		while (running) {
			start = System.nanoTime();
			update();
			draw();
			render();
			elapsed = System.nanoTime() - start;
			wait = 1000 - elapsed / 1000000;
			
			try {
				Thread.sleep(wait);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		stop();
	}
	
	public void update() {
		stateManager.update();
	}

	public void draw() {
		stateManager.draw(g);
	}
	
	public void render(){
		Graphics g2 = getGraphics();
		g2.drawImage(image, 0, 0, null);
		g2.dispose();
	}

	@Override
	public void keyPressed(KeyEvent k) {
		stateManager.keyPressed(k.getKeyCode());
	}

	@Override
	public void keyReleased(KeyEvent k) {
		stateManager.keyReleased(k.getKeyCode());
	}

	@Override
	public void keyTyped(KeyEvent k) {

	}

	public static void main(String[] args) {
		new Game();
	}

}
